<!DOCTYPE html>
<html>

<head>
  <title>New Sails App</title>

  <!-- Viewport mobile tag for sensible mobile support -->
  <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">

  <% /* If you want to discourage search engines from indexing this site, uncomment the following line: */%>
    <% /* <meta name="robots" content="noindex"> */%>


      <!--
        Stylesheets and Preprocessors
        ==============================

        You can always bring in CSS files manually with `<link>` tags, or asynchronously
        using a solution like AMD (RequireJS).  Or, if you like, you can take advantage
        of Sails' conventional asset pipeline (boilerplate Gruntfile).

        By default, stylesheets from your `assets/styles` folder are included
        here automatically (between STYLES and STYLES END). Both CSS (.css) and LESS (.less)
        are supported. In production, your styles will be minified and concatenated into
        a single file.

        To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:

            + Change the order of your CSS files
            + Import stylesheets from other directories
            + Use a different or additional preprocessor, like SASS, SCSS or Stylus
    -->

      <!--STYLES-->
      <link rel="stylesheet" href="/styles/importer.css">
      <link rel="stylesheet" href="/styles/style.css">
      <!--STYLES END-->

      <!-- 使用Bulma，添加Bulma CSS框架 -->
      <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bulma@0.9.0/css/bulma.min.css">
</head>

<body>


  <section class="section">
    <!-- 导航栏 -->
    <nav class="navbar" role="navigation" aria-label="main navigation">
      <div class="navbar-brand">
        <a class="navbar-item" href="/">
          <img src="/images/logo.png" width="112" height="28">
        </a>
        <a role="button" class="navbar-burger burger" aria-label="menu" aria-expanded="false"
          data-target="navbarBasicExample">
          <span aria-hidden="true"></span>
          <span aria-hidden="true"></span>
          <span aria-hidden="true"></span>
        </a>
      </div>
      <div id="navbarBasicExample" class="navbar-menu">
        <div class="navbar-start" id="menu_bar_1">
          123
        </div>

        <div class="navbar-end">
          <div class="navbar-item">
            <div class="buttons" id="menu_bar_2">
              456
            </div>
          </div>
        </div>
      </div>
    </nav>
    <div>
      <strong style="font-size: xx-large;">Banking</strong>
      <p>e-Banking</p>
    </div>
    <br>
    <br>



    <%- body %>

  </section>


  <!--
        Client-side Templates
        ========================

        HTML templates are important prerequisites of modern, rich client applications.
        To work their magic, frameworks like React, Vue.js, Angular, Ember, and Backbone
        require that you load these templates client-side.

        By default, your Gruntfile is configured to automatically load and precompile
        client-side JST templates in your `assets/templates` folder, then
        include them here automatically (between TEMPLATES and TEMPLATES END).

        To customize this behavior to fit your needs, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:

            + Import templates from other directories
            + Use a different view engine (handlebars, dust, pug/jade, etc.)
            + Internationalize your client-side templates using a server-side
              stringfile before they're served.
    -->

  <!--TEMPLATES-->
  <!--TEMPLATES END-->


  <!--
        Server-side View Locals
        ========================

        Sometimes, it's convenient to get access to your server-side view locals from
        client-side JavaScript.  This can improve page load times, remove the need for
        extra AJAX requests, and make your client-side code easier to understand and
        to maintain.  Sails provides a simple mechanism for accessing dynamic view
        locals: the "exposeLocalsToBrowser()" view partial.

        For more information on using this built-in feature, see:
        https://sailsjs.com/docs/concepts/views/locals#?escaping-untrusted-data-using-exposelocalstobrowser

    -->


  <!--

      Client-side Javascript
      ========================

      You can always bring in JS files manually with `script` tags, or asynchronously
      on the client using a solution like AMD (RequireJS).  Or, if you like, you can
      take advantage of Sails' conventional asset pipeline (boilerplate Gruntfile).

      By default, files in your `assets/js` folder are included here
      automatically (between SCRIPTS and SCRIPTS END).  Both JavaScript (.js) and
      CoffeeScript (.coffee) are supported. In production, your scripts will be minified
      and concatenated into a single file.

      To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
      For example, here are a few things you could do:

          + Change the order of your scripts
          + Import scripts from other directories
          + Use a different preprocessor, like TypeScript

    -->

  <!--SCRIPTS-->
  <script src="/dependencies/sails.io.js"></script>
  <script src="/js/jquery.min.js"></script>
  <script src="/js/three.min.js"></script>
  <!--SCRIPTS END-->


  <!-- 在网页种使用fontawesome字体 -->
  <script defer src="https://use.fontawesome.com/releases/v5.3.1/js/all.js"></script>


  <script>
    async function ajaxconfirmuser() {

      var response = await fetch("/list/", {
        method: "POST",
      });
      if (response.ok) {
        var html = await response.json();

        dynamicCode_menubar_1 = '<a class="navbar-item" href="/user/self_info"> 我的信息  </a>' +
          ''
        // '<a class="navbar-item" href="/eat/search"> 查询交易 </a>';
        if (html.userrole == "admin" || html.userrole == "member") {

          dynamicCode_menubar_1 += '<a class="navbar-item" href="/transac/transfer"> 转账汇款 </a>';
          dynamicCode_menubar_1 += '<a class="navbar-item" href="/user/acc_overview"> 账户总览 </a>';

        }
        if (html.userrole == "admin") {

          dynamicCode_menubar_1 += '<a class="navbar-item" href="/list"> 选择卡号  </a>'+
          '<a class="navbar-item" href="/bankcard/create"> 创建空卡 </a>' +
            '<a class="navbar-item" href="/eat/admin"> Admin </a>';
        }
        document.querySelector("#menu_bar_1").innerHTML = dynamicCode_menubar_1;

        if (!html.userid) {
          dynamicCode_menubar_2 = '<a class="button is-primary" href="/user/signup">' +
            '<strong>Sign up</strong>' +
            '</a>' +
            '<a class="button is-light" href="/user/login">' +
            'Log in' +
            '</a>';
        } else {
          dynamicCode_menubar_2 = 'Hi  ' + html.username +
            '<form action="/user/logout" method="post">' +
            '<button class="button is-link" type="submit">Logout</button>' +
            '</form>';
        }

        document.querySelector("#menu_bar_2").innerHTML = dynamicCode_menubar_2;




      } else {
        alert(response.status + ": " + response.statusText);
        var msg = await response.json();
        alert(msg);
      }
    };

    ajaxconfirmuser();
  </script>


</body>

</html>